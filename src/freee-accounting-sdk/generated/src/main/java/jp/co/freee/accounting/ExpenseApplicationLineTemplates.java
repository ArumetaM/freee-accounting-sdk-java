/**
 * Copyright (c) freee K.K. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 *
 */

package jp.co.freee.accounting;

import com.microsoft.rest.RestException;
import com.microsoft.rest.ServiceCallback;
import com.microsoft.rest.ServiceFuture;
import com.microsoft.rest.ServiceResponse;
import java.io.IOException;
import jp.co.freee.accounting.models.ExpenseApplicationLineTemplatesIndexResponse;
import rx.Observable;

/**
 * An instance of this class provides access to all the operations defined
 * in ExpenseApplicationLineTemplates.
 */
public interface ExpenseApplicationLineTemplates {
    /**
     * 経費科目一覧の取得.
     * 指定した事業所の経費科目一覧を取得する.
     *
     * @param companyId 事業所ID
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws RestException thrown if the request is rejected by server
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent
     * @return the ExpenseApplicationLineTemplatesIndexResponse object if successful.
     */
    ExpenseApplicationLineTemplatesIndexResponse list(int companyId);

    /**
     * 経費科目一覧の取得.
     * 指定した事業所の経費科目一覧を取得する.
     *
     * @param companyId 事業所ID
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceFuture} object
     */
    ServiceFuture<ExpenseApplicationLineTemplatesIndexResponse> listAsync(int companyId, final ServiceCallback<ExpenseApplicationLineTemplatesIndexResponse> serviceCallback);

    /**
     * 経費科目一覧の取得.
     * 指定した事業所の経費科目一覧を取得する.
     *
     * @param companyId 事業所ID
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the ExpenseApplicationLineTemplatesIndexResponse object
     */
    Observable<ExpenseApplicationLineTemplatesIndexResponse> listAsync(int companyId);

    /**
     * 経費科目一覧の取得.
     * 指定した事業所の経費科目一覧を取得する.
     *
     * @param companyId 事業所ID
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the ExpenseApplicationLineTemplatesIndexResponse object
     */
    Observable<ServiceResponse<ExpenseApplicationLineTemplatesIndexResponse>> listWithServiceResponseAsync(int companyId);
    /**
     * 経費科目一覧の取得.
     * 指定した事業所の経費科目一覧を取得する.
     *
     * @param companyId 事業所ID
     * @param offset 取得レコードのオフセット (デフォルト: 0)
     * @param limit 取得レコードの件数 (デフォルト: 20, 最大: 100)
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws RestException thrown if the request is rejected by server
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent
     * @return the ExpenseApplicationLineTemplatesIndexResponse object if successful.
     */
    ExpenseApplicationLineTemplatesIndexResponse list(int companyId, Integer offset, Integer limit);

    /**
     * 経費科目一覧の取得.
     * 指定した事業所の経費科目一覧を取得する.
     *
     * @param companyId 事業所ID
     * @param offset 取得レコードのオフセット (デフォルト: 0)
     * @param limit 取得レコードの件数 (デフォルト: 20, 最大: 100)
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceFuture} object
     */
    ServiceFuture<ExpenseApplicationLineTemplatesIndexResponse> listAsync(int companyId, Integer offset, Integer limit, final ServiceCallback<ExpenseApplicationLineTemplatesIndexResponse> serviceCallback);

    /**
     * 経費科目一覧の取得.
     * 指定した事業所の経費科目一覧を取得する.
     *
     * @param companyId 事業所ID
     * @param offset 取得レコードのオフセット (デフォルト: 0)
     * @param limit 取得レコードの件数 (デフォルト: 20, 最大: 100)
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the ExpenseApplicationLineTemplatesIndexResponse object
     */
    Observable<ExpenseApplicationLineTemplatesIndexResponse> listAsync(int companyId, Integer offset, Integer limit);

    /**
     * 経費科目一覧の取得.
     * 指定した事業所の経費科目一覧を取得する.
     *
     * @param companyId 事業所ID
     * @param offset 取得レコードのオフセット (デフォルト: 0)
     * @param limit 取得レコードの件数 (デフォルト: 20, 最大: 100)
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the ExpenseApplicationLineTemplatesIndexResponse object
     */
    Observable<ServiceResponse<ExpenseApplicationLineTemplatesIndexResponse>> listWithServiceResponseAsync(int companyId, Integer offset, Integer limit);

}
