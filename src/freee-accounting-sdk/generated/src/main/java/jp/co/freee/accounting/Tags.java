/**
 * Copyright (c) freee K.K. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 *
 */

package jp.co.freee.accounting;

import com.microsoft.rest.RestException;
import com.microsoft.rest.ServiceCallback;
import com.microsoft.rest.ServiceFuture;
import com.microsoft.rest.ServiceResponse;
import java.io.IOException;
import jp.co.freee.accounting.models.Parameters;
import jp.co.freee.accounting.models.TagsCreateResponse;
import jp.co.freee.accounting.models.TagsIndexResponse;
import rx.Observable;

/**
 * An instance of this class provides access to all the operations defined
 * in Tags.
 */
public interface Tags {
    /**
     * メモタグ一覧の取得.
     * 指定した事業所のメモタグ一覧を取得する.
     *
     * @param companyId 事業所ID
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws RestException thrown if the request is rejected by server
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent
     * @return the TagsIndexResponse object if successful.
     */
    TagsIndexResponse list(int companyId);

    /**
     * メモタグ一覧の取得.
     * 指定した事業所のメモタグ一覧を取得する.
     *
     * @param companyId 事業所ID
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceFuture} object
     */
    ServiceFuture<TagsIndexResponse> listAsync(int companyId, final ServiceCallback<TagsIndexResponse> serviceCallback);

    /**
     * メモタグ一覧の取得.
     * 指定した事業所のメモタグ一覧を取得する.
     *
     * @param companyId 事業所ID
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the TagsIndexResponse object
     */
    Observable<TagsIndexResponse> listAsync(int companyId);

    /**
     * メモタグ一覧の取得.
     * 指定した事業所のメモタグ一覧を取得する.
     *
     * @param companyId 事業所ID
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the TagsIndexResponse object
     */
    Observable<ServiceResponse<TagsIndexResponse>> listWithServiceResponseAsync(int companyId);

    /**
     * メモタグの作成.
     * 指定した事業所のメモタグを作成する.
     *
     * @param parameters メモタグの作成
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws RestException thrown if the request is rejected by server
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent
     * @return the TagsCreateResponse object if successful.
     */
    TagsCreateResponse create(Parameters parameters);

    /**
     * メモタグの作成.
     * 指定した事業所のメモタグを作成する.
     *
     * @param parameters メモタグの作成
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceFuture} object
     */
    ServiceFuture<TagsCreateResponse> createAsync(Parameters parameters, final ServiceCallback<TagsCreateResponse> serviceCallback);

    /**
     * メモタグの作成.
     * 指定した事業所のメモタグを作成する.
     *
     * @param parameters メモタグの作成
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the TagsCreateResponse object
     */
    Observable<TagsCreateResponse> createAsync(Parameters parameters);

    /**
     * メモタグの作成.
     * 指定した事業所のメモタグを作成する.
     *
     * @param parameters メモタグの作成
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the TagsCreateResponse object
     */
    Observable<ServiceResponse<TagsCreateResponse>> createWithServiceResponseAsync(Parameters parameters);

}
