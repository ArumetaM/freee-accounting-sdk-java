/**
 * Copyright (c) freee K.K. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 *
 */

package jp.co.freee.accounting;

import com.microsoft.rest.RestException;
import com.microsoft.rest.ServiceCallback;
import com.microsoft.rest.ServiceFuture;
import com.microsoft.rest.ServiceResponse;
import java.io.IOException;
import jp.co.freee.accounting.models.TaxesCodesResponse;
import rx.Observable;

/**
 * An instance of this class provides access to all the operations defined
 * in Taxes.
 */
public interface Taxes {
    /**
     * 税区分コード一覧の取得.
     * 税区分コード一覧を取得する.
     *
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws RestException thrown if the request is rejected by server
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent
     * @return the TaxesCodesResponse object if successful.
     */
    TaxesCodesResponse listTaxCodes();

    /**
     * 税区分コード一覧の取得.
     * 税区分コード一覧を取得する.
     *
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceFuture} object
     */
    ServiceFuture<TaxesCodesResponse> listTaxCodesAsync(final ServiceCallback<TaxesCodesResponse> serviceCallback);

    /**
     * 税区分コード一覧の取得.
     * 税区分コード一覧を取得する.
     *
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the TaxesCodesResponse object
     */
    Observable<TaxesCodesResponse> listTaxCodesAsync();

    /**
     * 税区分コード一覧の取得.
     * 税区分コード一覧を取得する.
     *
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the TaxesCodesResponse object
     */
    Observable<ServiceResponse<TaxesCodesResponse>> listTaxCodesWithServiceResponseAsync();

}
