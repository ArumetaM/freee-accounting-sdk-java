/**
 * Copyright (c) freee K.K. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 *
 */

package jp.co.freee.accounting.implementation;

import jp.co.freee.accounting.AccountingClient;
import jp.co.freee.accounting.Partners;
import jp.co.freee.accounting.Selectables;
import jp.co.freee.accounting.AccountItems;
import jp.co.freee.accounting.Tags;
import jp.co.freee.accounting.Sections;
import jp.co.freee.accounting.Invoices;
import jp.co.freee.accounting.Deals;
import jp.co.freee.accounting.Renews;
import jp.co.freee.accounting.Payments;
import jp.co.freee.accounting.ManualJournals;
import jp.co.freee.accounting.Users;
import jp.co.freee.accounting.Companies;
import jp.co.freee.accounting.Items;
import jp.co.freee.accounting.Taxes;
import jp.co.freee.accounting.Walletables;
import jp.co.freee.accounting.Banks;
import jp.co.freee.accounting.Transfers;
import jp.co.freee.accounting.WalletTxns;
import jp.co.freee.accounting.Journals;
import jp.co.freee.accounting.TrialBalances;
import jp.co.freee.accounting.Receipts;
import jp.co.freee.accounting.ExpenseApplications;
import jp.co.freee.accounting.ExpenseApplicationLineTemplates;
import jp.co.freee.accounting.SegmentTags;
import com.microsoft.rest.ServiceClient;
import com.microsoft.rest.RestClient;
import okhttp3.OkHttpClient;
import retrofit2.Retrofit;

/**
 * Initializes a new instance of the AccountingClient class.
 */
public class AccountingClientImpl extends ServiceClient implements AccountingClient {

    /**
     * The Partners object to access its operations.
     */
    private Partners partners;

    /**
     * Gets the Partners object to access its operations.
     * @return the Partners object.
     */
    public Partners partners() {
        return this.partners;
    }

    /**
     * The Selectables object to access its operations.
     */
    private Selectables selectables;

    /**
     * Gets the Selectables object to access its operations.
     * @return the Selectables object.
     */
    public Selectables selectables() {
        return this.selectables;
    }

    /**
     * The AccountItems object to access its operations.
     */
    private AccountItems accountItems;

    /**
     * Gets the AccountItems object to access its operations.
     * @return the AccountItems object.
     */
    public AccountItems accountItems() {
        return this.accountItems;
    }

    /**
     * The Tags object to access its operations.
     */
    private Tags tags;

    /**
     * Gets the Tags object to access its operations.
     * @return the Tags object.
     */
    public Tags tags() {
        return this.tags;
    }

    /**
     * The Sections object to access its operations.
     */
    private Sections sections;

    /**
     * Gets the Sections object to access its operations.
     * @return the Sections object.
     */
    public Sections sections() {
        return this.sections;
    }

    /**
     * The Invoices object to access its operations.
     */
    private Invoices invoices;

    /**
     * Gets the Invoices object to access its operations.
     * @return the Invoices object.
     */
    public Invoices invoices() {
        return this.invoices;
    }

    /**
     * The Deals object to access its operations.
     */
    private Deals deals;

    /**
     * Gets the Deals object to access its operations.
     * @return the Deals object.
     */
    public Deals deals() {
        return this.deals;
    }

    /**
     * The Renews object to access its operations.
     */
    private Renews renews;

    /**
     * Gets the Renews object to access its operations.
     * @return the Renews object.
     */
    public Renews renews() {
        return this.renews;
    }

    /**
     * The Payments object to access its operations.
     */
    private Payments payments;

    /**
     * Gets the Payments object to access its operations.
     * @return the Payments object.
     */
    public Payments payments() {
        return this.payments;
    }

    /**
     * The ManualJournals object to access its operations.
     */
    private ManualJournals manualJournals;

    /**
     * Gets the ManualJournals object to access its operations.
     * @return the ManualJournals object.
     */
    public ManualJournals manualJournals() {
        return this.manualJournals;
    }

    /**
     * The Users object to access its operations.
     */
    private Users users;

    /**
     * Gets the Users object to access its operations.
     * @return the Users object.
     */
    public Users users() {
        return this.users;
    }

    /**
     * The Companies object to access its operations.
     */
    private Companies companies;

    /**
     * Gets the Companies object to access its operations.
     * @return the Companies object.
     */
    public Companies companies() {
        return this.companies;
    }

    /**
     * The Items object to access its operations.
     */
    private Items items;

    /**
     * Gets the Items object to access its operations.
     * @return the Items object.
     */
    public Items items() {
        return this.items;
    }

    /**
     * The Taxes object to access its operations.
     */
    private Taxes taxes;

    /**
     * Gets the Taxes object to access its operations.
     * @return the Taxes object.
     */
    public Taxes taxes() {
        return this.taxes;
    }

    /**
     * The Walletables object to access its operations.
     */
    private Walletables walletables;

    /**
     * Gets the Walletables object to access its operations.
     * @return the Walletables object.
     */
    public Walletables walletables() {
        return this.walletables;
    }

    /**
     * The Banks object to access its operations.
     */
    private Banks banks;

    /**
     * Gets the Banks object to access its operations.
     * @return the Banks object.
     */
    public Banks banks() {
        return this.banks;
    }

    /**
     * The Transfers object to access its operations.
     */
    private Transfers transfers;

    /**
     * Gets the Transfers object to access its operations.
     * @return the Transfers object.
     */
    public Transfers transfers() {
        return this.transfers;
    }

    /**
     * The WalletTxns object to access its operations.
     */
    private WalletTxns walletTxns;

    /**
     * Gets the WalletTxns object to access its operations.
     * @return the WalletTxns object.
     */
    public WalletTxns walletTxns() {
        return this.walletTxns;
    }

    /**
     * The Journals object to access its operations.
     */
    private Journals journals;

    /**
     * Gets the Journals object to access its operations.
     * @return the Journals object.
     */
    public Journals journals() {
        return this.journals;
    }

    /**
     * The TrialBalances object to access its operations.
     */
    private TrialBalances trialBalances;

    /**
     * Gets the TrialBalances object to access its operations.
     * @return the TrialBalances object.
     */
    public TrialBalances trialBalances() {
        return this.trialBalances;
    }

    /**
     * The Receipts object to access its operations.
     */
    private Receipts receipts;

    /**
     * Gets the Receipts object to access its operations.
     * @return the Receipts object.
     */
    public Receipts receipts() {
        return this.receipts;
    }

    /**
     * The ExpenseApplications object to access its operations.
     */
    private ExpenseApplications expenseApplications;

    /**
     * Gets the ExpenseApplications object to access its operations.
     * @return the ExpenseApplications object.
     */
    public ExpenseApplications expenseApplications() {
        return this.expenseApplications;
    }

    /**
     * The ExpenseApplicationLineTemplates object to access its operations.
     */
    private ExpenseApplicationLineTemplates expenseApplicationLineTemplates;

    /**
     * Gets the ExpenseApplicationLineTemplates object to access its operations.
     * @return the ExpenseApplicationLineTemplates object.
     */
    public ExpenseApplicationLineTemplates expenseApplicationLineTemplates() {
        return this.expenseApplicationLineTemplates;
    }

    /**
     * The SegmentTags object to access its operations.
     */
    private SegmentTags segmentTags;

    /**
     * Gets the SegmentTags object to access its operations.
     * @return the SegmentTags object.
     */
    public SegmentTags segmentTags() {
        return this.segmentTags;
    }

    /**
     * Initializes an instance of AccountingClient client.
     */
    public AccountingClientImpl() {
        this("https://api.freee.co.jp/api/1");
    }

    /**
     * Initializes an instance of AccountingClient client.
     *
     * @param baseUrl the base URL of the host
     */
    public AccountingClientImpl(String baseUrl) {
        super(baseUrl);
        initialize();
    }

    /**
     * Initializes an instance of AccountingClient client.
     *
     * @param clientBuilder the builder for building an OkHttp client, bundled with user configurations
     * @param restBuilder the builder for building an Retrofit client, bundled with user configurations
     */
    public AccountingClientImpl(OkHttpClient.Builder clientBuilder, Retrofit.Builder restBuilder) {
        this("https://api.freee.co.jp/api/1", clientBuilder, restBuilder);
        initialize();
    }

    /**
     * Initializes an instance of AccountingClient client.
     *
     * @param baseUrl the base URL of the host
     * @param clientBuilder the builder for building an OkHttp client, bundled with user configurations
     * @param restBuilder the builder for building an Retrofit client, bundled with user configurations
     */
    public AccountingClientImpl(String baseUrl, OkHttpClient.Builder clientBuilder, Retrofit.Builder restBuilder) {
        super(baseUrl, clientBuilder, restBuilder);
        initialize();
    }

    /**
     * Initializes an instance of AccountingClient client.
     *
     * @param restClient the REST client containing pre-configured settings
     */
    public AccountingClientImpl(RestClient restClient) {
        super(restClient);
        initialize();
    }

    private void initialize() {
        this.partners = new PartnersImpl(retrofit(), this);
        this.selectables = new SelectablesImpl(retrofit(), this);
        this.accountItems = new AccountItemsImpl(retrofit(), this);
        this.tags = new TagsImpl(retrofit(), this);
        this.sections = new SectionsImpl(retrofit(), this);
        this.invoices = new InvoicesImpl(retrofit(), this);
        this.deals = new DealsImpl(retrofit(), this);
        this.renews = new RenewsImpl(retrofit(), this);
        this.payments = new PaymentsImpl(retrofit(), this);
        this.manualJournals = new ManualJournalsImpl(retrofit(), this);
        this.users = new UsersImpl(retrofit(), this);
        this.companies = new CompaniesImpl(retrofit(), this);
        this.items = new ItemsImpl(retrofit(), this);
        this.taxes = new TaxesImpl(retrofit(), this);
        this.walletables = new WalletablesImpl(retrofit(), this);
        this.banks = new BanksImpl(retrofit(), this);
        this.transfers = new TransfersImpl(retrofit(), this);
        this.walletTxns = new WalletTxnsImpl(retrofit(), this);
        this.journals = new JournalsImpl(retrofit(), this);
        this.trialBalances = new TrialBalancesImpl(retrofit(), this);
        this.receipts = new ReceiptsImpl(retrofit(), this);
        this.expenseApplications = new ExpenseApplicationsImpl(retrofit(), this);
        this.expenseApplicationLineTemplates = new ExpenseApplicationLineTemplatesImpl(retrofit(), this);
        this.segmentTags = new SegmentTagsImpl(retrofit(), this);
    }
}
