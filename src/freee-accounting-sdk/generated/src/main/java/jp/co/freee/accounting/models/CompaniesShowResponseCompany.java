/**
 * Copyright (c) freee K.K. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 *
 */

package jp.co.freee.accounting.models;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The CompaniesShowResponseCompany model.
 */
public class CompaniesShowResponseCompany {
    /**
     * 事業所ID.
     */
    @JsonProperty(value = "id", required = true)
    private int id;

    /**
     * 事業所の正式名称 (100文字以内).
     */
    @JsonProperty(value = "name", required = true)
    private String name;

    /**
     * 正式名称フリガナ (100文字以内).
     */
    @JsonProperty(value = "name_kana", required = true)
    private String nameKana;

    /**
     * 事業所名.
     */
    @JsonProperty(value = "display_name", required = true)
    private String displayName;

    /**
     * 源泉徴収税計算（0: 消費税を含める、1: 消費税を含めない）.
     */
    @JsonProperty(value = "tax_at_source_calc_type", required = true)
    private int taxAtSourceCalcType;

    /**
     * 担当者名 (50文字以内).
     */
    @JsonProperty(value = "contact_name", required = true)
    private String contactName;

    /**
     * 従業員数（0: 経営者のみ、1: 2~5人、2: 6~10人、3: 11~20人、4: 21~30人、5: 31~40人、6:
     * 41~100人、7: 100人以上.
     */
    @JsonProperty(value = "head_count", required = true)
    private Integer headCount;

    /**
     * 法人番号 (半角数字13桁、法人のみ).
     */
    @JsonProperty(value = "corporate_number", required = true)
    private String corporateNumber;

    /**
     * 仕訳番号形式（not_used: 使用しない、digits: 数字（例：5091824）、alnum: 英数字（例：59J0P））.
     * Possible values include: 'not_used', 'digits', 'alnum'.
     */
    @JsonProperty(value = "txn_number_format", required = true)
    private String txnNumberFormat;

    /**
     * 決済口座のデフォルト.
     */
    @JsonProperty(value = "default_wallet_account_id")
    private Integer defaultWalletAccountId;

    /**
     * プライベート資金/役員資金（false: 使用しない、true: 使用する）.
     */
    @JsonProperty(value = "private_settlement", required = true)
    private boolean privateSettlement;

    /**
     * マイナスの表示方法（0: -、 1: △）.
     */
    @JsonProperty(value = "minus_format", required = true)
    private int minusFormat;

    /**
     * ユーザーの権限. Possible values include: 'admin', 'simple_accounting',
     * 'self_only', 'read_only'.
     */
    @JsonProperty(value = "role", required = true)
    private String role;

    /**
     * 電話番号１.
     */
    @JsonProperty(value = "phone1", required = true)
    private String phone1;

    /**
     * 電話番号２.
     */
    @JsonProperty(value = "phone2", required = true)
    private String phone2;

    /**
     * FAX.
     */
    @JsonProperty(value = "fax", required = true)
    private String fax;

    /**
     * 郵便番号.
     */
    @JsonProperty(value = "zipcode", required = true)
    private String zipcode;

    /**
     * 都道府県コード（0:
     * 北海道、1:青森、2:岩手、3:宮城、4:秋田、5:山形、6:福島、7:茨城、8:栃木、9:群馬、10:埼玉、11:千葉、12:東京、13:神奈川、14:新潟、15:富山、16:石川、17:福井、18:山梨、19:長野、20:岐阜、21:静岡、22:愛知、23:三重、24:滋賀、25:京都、26:大阪、27:兵庫、28:奈良、29:和歌山、30:鳥取、31:島根、32:岡山、33:広島、34:山口、35:徳島、36:香川、37:愛媛、38:高知、39:福岡、40:佐賀、41:長崎、42:熊本、43:大分、44:宮崎、45:鹿児島、46:沖縄.
     */
    @JsonProperty(value = "prefecture_code", required = true)
    private int prefectureCode;

    /**
     * 市区町村・番地.
     */
    @JsonProperty(value = "street_name1", required = true)
    private String streetName1;

    /**
     * 建物名・部屋番号など.
     */
    @JsonProperty(value = "street_name2", required = true)
    private String streetName2;

    /**
     * レイアウト(0: レイアウト1, 1:レイアウト2, 3:封筒1, 4:レイアウト3(繰越金額欄あり), 5: 封筒2(繰越金額欄あり)).
     */
    @JsonProperty(value = "invoice_layout", required = true)
    private int invoiceLayout;

    /**
     * スタイル(0: クラシック, 1: モダン).
     */
    @JsonProperty(value = "invoice_style", required = true)
    private int invoiceStyle;

    /**
     * 金額端数処理方法（0: 切り捨て、1: 切り上げ、2: 四捨五入）.
     */
    @JsonProperty(value = "amount_fraction", required = true)
    private int amountFraction;

    /**
     * 種別（agriculture_forestry_fisheries_ore: 農林水産業/鉱業、construction:
     * 建設、manufacturing_processing: 製造/加工、it: IT、transportation_logistics:
     * 運輸/物流、retail_wholesale: 小売/卸売、finance_insurance:
     * 金融/保険、real_estate_rental: 不動産/レンタル、profession:
     * 士業/学術/専門技術サービス、design_production: デザイン/制作、food:
     * 飲食、leisure_entertainment: レジャー/娯楽、lifestyle: 生活関連サービス、education:
     * 教育/学習支援、medical_welfare: 医療/福祉、other_services: その他サービス、other: その他）.
     * Possible values include: '', 'agriculture_forestry_fisheries_ore',
     * 'construction', 'manufacturing_processing', 'it',
     * 'transportation_logistics', 'retail_wholesale', 'finance_insurance',
     * 'real_estate_rental', 'profession', 'design_production', 'food',
     * 'lifestyle', 'education', 'medical_welfare', 'other_services', 'other'.
     */
    @JsonProperty(value = "industry_class", required = true)
    private String industryClass;

    /**
     * コード（transport_delivery: 輸送業/配送業、delivery:
     * バイク便等の配達業、other_transportation_logistics: その他の運輸業、物流業）. Possible values
     * include: '', 'transport_delivery', 'delivery',
     * 'other_transportation_logistics'.
     */
    @JsonProperty(value = "industry_code", required = true)
    private String industryCode;

    /**
     * 仕訳承認フロー（enable: 有効、 disable: 無効）. Possible values include: 'enable',
     * 'disable'.
     */
    @JsonProperty(value = "workflow_setting", required = true)
    private String workflowSetting;

    /**
     * 取引先コードの利用設定（true: 有効、 false: 無効）.
     */
    @JsonProperty(value = "use_partner_code", required = true)
    private boolean usePartnerCode;

    /**
     * Get 事業所ID.
     *
     * @return the id value
     */
    public int id() {
        return this.id;
    }

    /**
     * Set 事業所ID.
     *
     * @param id the id value to set
     * @return the CompaniesShowResponseCompany object itself.
     */
    public CompaniesShowResponseCompany withId(int id) {
        this.id = id;
        return this;
    }

    /**
     * Get 事業所の正式名称 (100文字以内).
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Set 事業所の正式名称 (100文字以内).
     *
     * @param name the name value to set
     * @return the CompaniesShowResponseCompany object itself.
     */
    public CompaniesShowResponseCompany withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get 正式名称フリガナ (100文字以内).
     *
     * @return the nameKana value
     */
    public String nameKana() {
        return this.nameKana;
    }

    /**
     * Set 正式名称フリガナ (100文字以内).
     *
     * @param nameKana the nameKana value to set
     * @return the CompaniesShowResponseCompany object itself.
     */
    public CompaniesShowResponseCompany withNameKana(String nameKana) {
        this.nameKana = nameKana;
        return this;
    }

    /**
     * Get 事業所名.
     *
     * @return the displayName value
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set 事業所名.
     *
     * @param displayName the displayName value to set
     * @return the CompaniesShowResponseCompany object itself.
     */
    public CompaniesShowResponseCompany withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get 源泉徴収税計算（0: 消費税を含める、1: 消費税を含めない）.
     *
     * @return the taxAtSourceCalcType value
     */
    public int taxAtSourceCalcType() {
        return this.taxAtSourceCalcType;
    }

    /**
     * Set 源泉徴収税計算（0: 消費税を含める、1: 消費税を含めない）.
     *
     * @param taxAtSourceCalcType the taxAtSourceCalcType value to set
     * @return the CompaniesShowResponseCompany object itself.
     */
    public CompaniesShowResponseCompany withTaxAtSourceCalcType(int taxAtSourceCalcType) {
        this.taxAtSourceCalcType = taxAtSourceCalcType;
        return this;
    }

    /**
     * Get 担当者名 (50文字以内).
     *
     * @return the contactName value
     */
    public String contactName() {
        return this.contactName;
    }

    /**
     * Set 担当者名 (50文字以内).
     *
     * @param contactName the contactName value to set
     * @return the CompaniesShowResponseCompany object itself.
     */
    public CompaniesShowResponseCompany withContactName(String contactName) {
        this.contactName = contactName;
        return this;
    }

    /**
     * Get 従業員数（0: 経営者のみ、1: 2~5人、2: 6~10人、3: 11~20人、4: 21~30人、5: 31~40人、6: 41~100人、7: 100人以上.
     *
     * @return the headCount value
     */
    public Integer headCount() {
        return this.headCount;
    }

    /**
     * Set 従業員数（0: 経営者のみ、1: 2~5人、2: 6~10人、3: 11~20人、4: 21~30人、5: 31~40人、6: 41~100人、7: 100人以上.
     *
     * @param headCount the headCount value to set
     * @return the CompaniesShowResponseCompany object itself.
     */
    public CompaniesShowResponseCompany withHeadCount(Integer headCount) {
        this.headCount = headCount;
        return this;
    }

    /**
     * Get 法人番号 (半角数字13桁、法人のみ).
     *
     * @return the corporateNumber value
     */
    public String corporateNumber() {
        return this.corporateNumber;
    }

    /**
     * Set 法人番号 (半角数字13桁、法人のみ).
     *
     * @param corporateNumber the corporateNumber value to set
     * @return the CompaniesShowResponseCompany object itself.
     */
    public CompaniesShowResponseCompany withCorporateNumber(String corporateNumber) {
        this.corporateNumber = corporateNumber;
        return this;
    }

    /**
     * Get 仕訳番号形式（not_used: 使用しない、digits: 数字（例：5091824）、alnum: 英数字（例：59J0P））. Possible values include: 'not_used', 'digits', 'alnum'.
     *
     * @return the txnNumberFormat value
     */
    public String txnNumberFormat() {
        return this.txnNumberFormat;
    }

    /**
     * Set 仕訳番号形式（not_used: 使用しない、digits: 数字（例：5091824）、alnum: 英数字（例：59J0P））. Possible values include: 'not_used', 'digits', 'alnum'.
     *
     * @param txnNumberFormat the txnNumberFormat value to set
     * @return the CompaniesShowResponseCompany object itself.
     */
    public CompaniesShowResponseCompany withTxnNumberFormat(String txnNumberFormat) {
        this.txnNumberFormat = txnNumberFormat;
        return this;
    }

    /**
     * Get 決済口座のデフォルト.
     *
     * @return the defaultWalletAccountId value
     */
    public Integer defaultWalletAccountId() {
        return this.defaultWalletAccountId;
    }

    /**
     * Set 決済口座のデフォルト.
     *
     * @param defaultWalletAccountId the defaultWalletAccountId value to set
     * @return the CompaniesShowResponseCompany object itself.
     */
    public CompaniesShowResponseCompany withDefaultWalletAccountId(Integer defaultWalletAccountId) {
        this.defaultWalletAccountId = defaultWalletAccountId;
        return this;
    }

    /**
     * Get プライベート資金/役員資金（false: 使用しない、true: 使用する）.
     *
     * @return the privateSettlement value
     */
    public boolean privateSettlement() {
        return this.privateSettlement;
    }

    /**
     * Set プライベート資金/役員資金（false: 使用しない、true: 使用する）.
     *
     * @param privateSettlement the privateSettlement value to set
     * @return the CompaniesShowResponseCompany object itself.
     */
    public CompaniesShowResponseCompany withPrivateSettlement(boolean privateSettlement) {
        this.privateSettlement = privateSettlement;
        return this;
    }

    /**
     * Get マイナスの表示方法（0: -、 1: △）.
     *
     * @return the minusFormat value
     */
    public int minusFormat() {
        return this.minusFormat;
    }

    /**
     * Set マイナスの表示方法（0: -、 1: △）.
     *
     * @param minusFormat the minusFormat value to set
     * @return the CompaniesShowResponseCompany object itself.
     */
    public CompaniesShowResponseCompany withMinusFormat(int minusFormat) {
        this.minusFormat = minusFormat;
        return this;
    }

    /**
     * Get ユーザーの権限. Possible values include: 'admin', 'simple_accounting', 'self_only', 'read_only'.
     *
     * @return the role value
     */
    public String role() {
        return this.role;
    }

    /**
     * Set ユーザーの権限. Possible values include: 'admin', 'simple_accounting', 'self_only', 'read_only'.
     *
     * @param role the role value to set
     * @return the CompaniesShowResponseCompany object itself.
     */
    public CompaniesShowResponseCompany withRole(String role) {
        this.role = role;
        return this;
    }

    /**
     * Get 電話番号１.
     *
     * @return the phone1 value
     */
    public String phone1() {
        return this.phone1;
    }

    /**
     * Set 電話番号１.
     *
     * @param phone1 the phone1 value to set
     * @return the CompaniesShowResponseCompany object itself.
     */
    public CompaniesShowResponseCompany withPhone1(String phone1) {
        this.phone1 = phone1;
        return this;
    }

    /**
     * Get 電話番号２.
     *
     * @return the phone2 value
     */
    public String phone2() {
        return this.phone2;
    }

    /**
     * Set 電話番号２.
     *
     * @param phone2 the phone2 value to set
     * @return the CompaniesShowResponseCompany object itself.
     */
    public CompaniesShowResponseCompany withPhone2(String phone2) {
        this.phone2 = phone2;
        return this;
    }

    /**
     * Get fAX.
     *
     * @return the fax value
     */
    public String fax() {
        return this.fax;
    }

    /**
     * Set fAX.
     *
     * @param fax the fax value to set
     * @return the CompaniesShowResponseCompany object itself.
     */
    public CompaniesShowResponseCompany withFax(String fax) {
        this.fax = fax;
        return this;
    }

    /**
     * Get 郵便番号.
     *
     * @return the zipcode value
     */
    public String zipcode() {
        return this.zipcode;
    }

    /**
     * Set 郵便番号.
     *
     * @param zipcode the zipcode value to set
     * @return the CompaniesShowResponseCompany object itself.
     */
    public CompaniesShowResponseCompany withZipcode(String zipcode) {
        this.zipcode = zipcode;
        return this;
    }

    /**
     * Get 都道府県コード（0: 北海道、1:青森、2:岩手、3:宮城、4:秋田、5:山形、6:福島、7:茨城、8:栃木、9:群馬、10:埼玉、11:千葉、12:東京、13:神奈川、14:新潟、15:富山、16:石川、17:福井、18:山梨、19:長野、20:岐阜、21:静岡、22:愛知、23:三重、24:滋賀、25:京都、26:大阪、27:兵庫、28:奈良、29:和歌山、30:鳥取、31:島根、32:岡山、33:広島、34:山口、35:徳島、36:香川、37:愛媛、38:高知、39:福岡、40:佐賀、41:長崎、42:熊本、43:大分、44:宮崎、45:鹿児島、46:沖縄.
     *
     * @return the prefectureCode value
     */
    public int prefectureCode() {
        return this.prefectureCode;
    }

    /**
     * Set 都道府県コード（0: 北海道、1:青森、2:岩手、3:宮城、4:秋田、5:山形、6:福島、7:茨城、8:栃木、9:群馬、10:埼玉、11:千葉、12:東京、13:神奈川、14:新潟、15:富山、16:石川、17:福井、18:山梨、19:長野、20:岐阜、21:静岡、22:愛知、23:三重、24:滋賀、25:京都、26:大阪、27:兵庫、28:奈良、29:和歌山、30:鳥取、31:島根、32:岡山、33:広島、34:山口、35:徳島、36:香川、37:愛媛、38:高知、39:福岡、40:佐賀、41:長崎、42:熊本、43:大分、44:宮崎、45:鹿児島、46:沖縄.
     *
     * @param prefectureCode the prefectureCode value to set
     * @return the CompaniesShowResponseCompany object itself.
     */
    public CompaniesShowResponseCompany withPrefectureCode(int prefectureCode) {
        this.prefectureCode = prefectureCode;
        return this;
    }

    /**
     * Get 市区町村・番地.
     *
     * @return the streetName1 value
     */
    public String streetName1() {
        return this.streetName1;
    }

    /**
     * Set 市区町村・番地.
     *
     * @param streetName1 the streetName1 value to set
     * @return the CompaniesShowResponseCompany object itself.
     */
    public CompaniesShowResponseCompany withStreetName1(String streetName1) {
        this.streetName1 = streetName1;
        return this;
    }

    /**
     * Get 建物名・部屋番号など.
     *
     * @return the streetName2 value
     */
    public String streetName2() {
        return this.streetName2;
    }

    /**
     * Set 建物名・部屋番号など.
     *
     * @param streetName2 the streetName2 value to set
     * @return the CompaniesShowResponseCompany object itself.
     */
    public CompaniesShowResponseCompany withStreetName2(String streetName2) {
        this.streetName2 = streetName2;
        return this;
    }

    /**
     * Get レイアウト(0: レイアウト1, 1:レイアウト2, 3:封筒1, 4:レイアウト3(繰越金額欄あり), 5: 封筒2(繰越金額欄あり)).
     *
     * @return the invoiceLayout value
     */
    public int invoiceLayout() {
        return this.invoiceLayout;
    }

    /**
     * Set レイアウト(0: レイアウト1, 1:レイアウト2, 3:封筒1, 4:レイアウト3(繰越金額欄あり), 5: 封筒2(繰越金額欄あり)).
     *
     * @param invoiceLayout the invoiceLayout value to set
     * @return the CompaniesShowResponseCompany object itself.
     */
    public CompaniesShowResponseCompany withInvoiceLayout(int invoiceLayout) {
        this.invoiceLayout = invoiceLayout;
        return this;
    }

    /**
     * Get スタイル(0: クラシック, 1: モダン).
     *
     * @return the invoiceStyle value
     */
    public int invoiceStyle() {
        return this.invoiceStyle;
    }

    /**
     * Set スタイル(0: クラシック, 1: モダン).
     *
     * @param invoiceStyle the invoiceStyle value to set
     * @return the CompaniesShowResponseCompany object itself.
     */
    public CompaniesShowResponseCompany withInvoiceStyle(int invoiceStyle) {
        this.invoiceStyle = invoiceStyle;
        return this;
    }

    /**
     * Get 金額端数処理方法（0: 切り捨て、1: 切り上げ、2: 四捨五入）.
     *
     * @return the amountFraction value
     */
    public int amountFraction() {
        return this.amountFraction;
    }

    /**
     * Set 金額端数処理方法（0: 切り捨て、1: 切り上げ、2: 四捨五入）.
     *
     * @param amountFraction the amountFraction value to set
     * @return the CompaniesShowResponseCompany object itself.
     */
    public CompaniesShowResponseCompany withAmountFraction(int amountFraction) {
        this.amountFraction = amountFraction;
        return this;
    }

    /**
     * Get 種別（agriculture_forestry_fisheries_ore: 農林水産業/鉱業、construction: 建設、manufacturing_processing: 製造/加工、it: IT、transportation_logistics: 運輸/物流、retail_wholesale: 小売/卸売、finance_insurance: 金融/保険、real_estate_rental: 不動産/レンタル、profession: 士業/学術/専門技術サービス、design_production: デザイン/制作、food: 飲食、leisure_entertainment: レジャー/娯楽、lifestyle: 生活関連サービス、education: 教育/学習支援、medical_welfare: 医療/福祉、other_services: その他サービス、other: その他）. Possible values include: '', 'agriculture_forestry_fisheries_ore', 'construction', 'manufacturing_processing', 'it', 'transportation_logistics', 'retail_wholesale', 'finance_insurance', 'real_estate_rental', 'profession', 'design_production', 'food', 'lifestyle', 'education', 'medical_welfare', 'other_services', 'other'.
     *
     * @return the industryClass value
     */
    public String industryClass() {
        return this.industryClass;
    }

    /**
     * Set 種別（agriculture_forestry_fisheries_ore: 農林水産業/鉱業、construction: 建設、manufacturing_processing: 製造/加工、it: IT、transportation_logistics: 運輸/物流、retail_wholesale: 小売/卸売、finance_insurance: 金融/保険、real_estate_rental: 不動産/レンタル、profession: 士業/学術/専門技術サービス、design_production: デザイン/制作、food: 飲食、leisure_entertainment: レジャー/娯楽、lifestyle: 生活関連サービス、education: 教育/学習支援、medical_welfare: 医療/福祉、other_services: その他サービス、other: その他）. Possible values include: '', 'agriculture_forestry_fisheries_ore', 'construction', 'manufacturing_processing', 'it', 'transportation_logistics', 'retail_wholesale', 'finance_insurance', 'real_estate_rental', 'profession', 'design_production', 'food', 'lifestyle', 'education', 'medical_welfare', 'other_services', 'other'.
     *
     * @param industryClass the industryClass value to set
     * @return the CompaniesShowResponseCompany object itself.
     */
    public CompaniesShowResponseCompany withIndustryClass(String industryClass) {
        this.industryClass = industryClass;
        return this;
    }

    /**
     * Get コード（transport_delivery: 輸送業/配送業、delivery: バイク便等の配達業、other_transportation_logistics: その他の運輸業、物流業）. Possible values include: '', 'transport_delivery', 'delivery', 'other_transportation_logistics'.
     *
     * @return the industryCode value
     */
    public String industryCode() {
        return this.industryCode;
    }

    /**
     * Set コード（transport_delivery: 輸送業/配送業、delivery: バイク便等の配達業、other_transportation_logistics: その他の運輸業、物流業）. Possible values include: '', 'transport_delivery', 'delivery', 'other_transportation_logistics'.
     *
     * @param industryCode the industryCode value to set
     * @return the CompaniesShowResponseCompany object itself.
     */
    public CompaniesShowResponseCompany withIndustryCode(String industryCode) {
        this.industryCode = industryCode;
        return this;
    }

    /**
     * Get 仕訳承認フロー（enable: 有効、 disable: 無効）. Possible values include: 'enable', 'disable'.
     *
     * @return the workflowSetting value
     */
    public String workflowSetting() {
        return this.workflowSetting;
    }

    /**
     * Set 仕訳承認フロー（enable: 有効、 disable: 無効）. Possible values include: 'enable', 'disable'.
     *
     * @param workflowSetting the workflowSetting value to set
     * @return the CompaniesShowResponseCompany object itself.
     */
    public CompaniesShowResponseCompany withWorkflowSetting(String workflowSetting) {
        this.workflowSetting = workflowSetting;
        return this;
    }

    /**
     * Get 取引先コードの利用設定（true: 有効、 false: 無効）.
     *
     * @return the usePartnerCode value
     */
    public boolean usePartnerCode() {
        return this.usePartnerCode;
    }

    /**
     * Set 取引先コードの利用設定（true: 有効、 false: 無効）.
     *
     * @param usePartnerCode the usePartnerCode value to set
     * @return the CompaniesShowResponseCompany object itself.
     */
    public CompaniesShowResponseCompany withUsePartnerCode(boolean usePartnerCode) {
        this.usePartnerCode = usePartnerCode;
        return this;
    }

}
