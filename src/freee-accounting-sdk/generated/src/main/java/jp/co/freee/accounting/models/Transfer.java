/**
 * Copyright (c) freee K.K. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 *
 */

package jp.co.freee.accounting.models;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The Transfer model.
 */
public class Transfer {
    /**
     * 取引(振替)ID.
     */
    @JsonProperty(value = "id", required = true)
    private int id;

    /**
     * 事業所ID.
     */
    @JsonProperty(value = "company_id", required = true)
    private int companyId;

    /**
     * 金額.
     */
    @JsonProperty(value = "amount", required = true)
    private int amount;

    /**
     * 振替日 (yyyy-mm-dd).
     */
    @JsonProperty(value = "date", required = true)
    private String dateProperty;

    /**
     * 振替元口座区分 (銀行口座: bank_account, クレジットカード: credit_card, 現金: wallet).
     * Possible values include: 'bank_account', 'wallet', 'credit_card', ''.
     */
    @JsonProperty(value = "from_walletable_type", required = true)
    private String fromWalletableType;

    /**
     * 振替元口座ID.
     */
    @JsonProperty(value = "from_walletable_id", required = true)
    private int fromWalletableId;

    /**
     * 振替先口座区分 (銀行口座: bank_account, クレジットカード: credit_card, 現金: wallet).
     * Possible values include: 'bank_account', 'wallet', 'credit_card', ''.
     */
    @JsonProperty(value = "to_walletable_type", required = true)
    private String toWalletableType;

    /**
     * 振替先口座ID.
     */
    @JsonProperty(value = "to_walletable_id", required = true)
    private int toWalletableId;

    /**
     * 備考.
     */
    @JsonProperty(value = "description", required = true)
    private String description;

    /**
     * Get 取引(振替)ID.
     *
     * @return the id value
     */
    public int id() {
        return this.id;
    }

    /**
     * Set 取引(振替)ID.
     *
     * @param id the id value to set
     * @return the Transfer object itself.
     */
    public Transfer withId(int id) {
        this.id = id;
        return this;
    }

    /**
     * Get 事業所ID.
     *
     * @return the companyId value
     */
    public int companyId() {
        return this.companyId;
    }

    /**
     * Set 事業所ID.
     *
     * @param companyId the companyId value to set
     * @return the Transfer object itself.
     */
    public Transfer withCompanyId(int companyId) {
        this.companyId = companyId;
        return this;
    }

    /**
     * Get 金額.
     *
     * @return the amount value
     */
    public int amount() {
        return this.amount;
    }

    /**
     * Set 金額.
     *
     * @param amount the amount value to set
     * @return the Transfer object itself.
     */
    public Transfer withAmount(int amount) {
        this.amount = amount;
        return this;
    }

    /**
     * Get 振替日 (yyyy-mm-dd).
     *
     * @return the dateProperty value
     */
    public String dateProperty() {
        return this.dateProperty;
    }

    /**
     * Set 振替日 (yyyy-mm-dd).
     *
     * @param dateProperty the dateProperty value to set
     * @return the Transfer object itself.
     */
    public Transfer withDateProperty(String dateProperty) {
        this.dateProperty = dateProperty;
        return this;
    }

    /**
     * Get 振替元口座区分 (銀行口座: bank_account, クレジットカード: credit_card, 現金: wallet). Possible values include: 'bank_account', 'wallet', 'credit_card', ''.
     *
     * @return the fromWalletableType value
     */
    public String fromWalletableType() {
        return this.fromWalletableType;
    }

    /**
     * Set 振替元口座区分 (銀行口座: bank_account, クレジットカード: credit_card, 現金: wallet). Possible values include: 'bank_account', 'wallet', 'credit_card', ''.
     *
     * @param fromWalletableType the fromWalletableType value to set
     * @return the Transfer object itself.
     */
    public Transfer withFromWalletableType(String fromWalletableType) {
        this.fromWalletableType = fromWalletableType;
        return this;
    }

    /**
     * Get 振替元口座ID.
     *
     * @return the fromWalletableId value
     */
    public int fromWalletableId() {
        return this.fromWalletableId;
    }

    /**
     * Set 振替元口座ID.
     *
     * @param fromWalletableId the fromWalletableId value to set
     * @return the Transfer object itself.
     */
    public Transfer withFromWalletableId(int fromWalletableId) {
        this.fromWalletableId = fromWalletableId;
        return this;
    }

    /**
     * Get 振替先口座区分 (銀行口座: bank_account, クレジットカード: credit_card, 現金: wallet). Possible values include: 'bank_account', 'wallet', 'credit_card', ''.
     *
     * @return the toWalletableType value
     */
    public String toWalletableType() {
        return this.toWalletableType;
    }

    /**
     * Set 振替先口座区分 (銀行口座: bank_account, クレジットカード: credit_card, 現金: wallet). Possible values include: 'bank_account', 'wallet', 'credit_card', ''.
     *
     * @param toWalletableType the toWalletableType value to set
     * @return the Transfer object itself.
     */
    public Transfer withToWalletableType(String toWalletableType) {
        this.toWalletableType = toWalletableType;
        return this;
    }

    /**
     * Get 振替先口座ID.
     *
     * @return the toWalletableId value
     */
    public int toWalletableId() {
        return this.toWalletableId;
    }

    /**
     * Set 振替先口座ID.
     *
     * @param toWalletableId the toWalletableId value to set
     * @return the Transfer object itself.
     */
    public Transfer withToWalletableId(int toWalletableId) {
        this.toWalletableId = toWalletableId;
        return this;
    }

    /**
     * Get 備考.
     *
     * @return the description value
     */
    public String description() {
        return this.description;
    }

    /**
     * Set 備考.
     *
     * @param description the description value to set
     * @return the Transfer object itself.
     */
    public Transfer withDescription(String description) {
        this.description = description;
        return this;
    }

}
