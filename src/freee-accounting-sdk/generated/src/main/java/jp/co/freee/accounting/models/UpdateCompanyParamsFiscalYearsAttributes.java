/**
 * Copyright (c) freee K.K. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 *
 */

package jp.co.freee.accounting.models;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The UpdateCompanyParamsFiscalYearsAttributes model.
 */
public class UpdateCompanyParamsFiscalYearsAttributes {
    /**
     * 製造業向け機能（0: 使用しない、1: 使用する）.
     */
    @JsonProperty(value = "use_industry_template")
    private Integer useIndustryTemplate;

    /**
     * 固定資産の控除法（0: 直接控除法、1: 間接控除法）.
     */
    @JsonProperty(value = "indirect_write_off_method")
    private Integer indirectWriteOffMethod;

    /**
     * 間接控除時の累計額（0: 共通、1: 資産分類別）.
     */
    @JsonProperty(value = "indirect_write_off_method_type")
    private Integer indirectWriteOffMethodType;

    /**
     * 期首日.
     */
    @JsonProperty(value = "start_date")
    private String startDate;

    /**
     * 期末日（決算日）.
     */
    @JsonProperty(value = "end_date")
    private String endDate;

    /**
     * 期.
     */
    @JsonProperty(value = "accounting_period")
    private Integer accountingPeriod;

    /**
     * 減価償却端数処理法(法人のみ)(0: 切り捨て、1: 切り上げ).
     */
    @JsonProperty(value = "depreciation_fraction")
    private Integer depreciationFraction;

    /**
     * 不動産所得使用区分(個人事業主のみ)（0: 使用しない、3: 使用する）.
     */
    @JsonProperty(value = "return_code")
    private Integer returnCode;

    /**
     * 消費税端数処理方法（0: 切り上げ、1: 切り捨て, 2: 四捨五入）.
     */
    @JsonProperty(value = "tax_fraction")
    private Integer taxFraction;

    /**
     * Get 製造業向け機能（0: 使用しない、1: 使用する）.
     *
     * @return the useIndustryTemplate value
     */
    public Integer useIndustryTemplate() {
        return this.useIndustryTemplate;
    }

    /**
     * Set 製造業向け機能（0: 使用しない、1: 使用する）.
     *
     * @param useIndustryTemplate the useIndustryTemplate value to set
     * @return the UpdateCompanyParamsFiscalYearsAttributes object itself.
     */
    public UpdateCompanyParamsFiscalYearsAttributes withUseIndustryTemplate(Integer useIndustryTemplate) {
        this.useIndustryTemplate = useIndustryTemplate;
        return this;
    }

    /**
     * Get 固定資産の控除法（0: 直接控除法、1: 間接控除法）.
     *
     * @return the indirectWriteOffMethod value
     */
    public Integer indirectWriteOffMethod() {
        return this.indirectWriteOffMethod;
    }

    /**
     * Set 固定資産の控除法（0: 直接控除法、1: 間接控除法）.
     *
     * @param indirectWriteOffMethod the indirectWriteOffMethod value to set
     * @return the UpdateCompanyParamsFiscalYearsAttributes object itself.
     */
    public UpdateCompanyParamsFiscalYearsAttributes withIndirectWriteOffMethod(Integer indirectWriteOffMethod) {
        this.indirectWriteOffMethod = indirectWriteOffMethod;
        return this;
    }

    /**
     * Get 間接控除時の累計額（0: 共通、1: 資産分類別）.
     *
     * @return the indirectWriteOffMethodType value
     */
    public Integer indirectWriteOffMethodType() {
        return this.indirectWriteOffMethodType;
    }

    /**
     * Set 間接控除時の累計額（0: 共通、1: 資産分類別）.
     *
     * @param indirectWriteOffMethodType the indirectWriteOffMethodType value to set
     * @return the UpdateCompanyParamsFiscalYearsAttributes object itself.
     */
    public UpdateCompanyParamsFiscalYearsAttributes withIndirectWriteOffMethodType(Integer indirectWriteOffMethodType) {
        this.indirectWriteOffMethodType = indirectWriteOffMethodType;
        return this;
    }

    /**
     * Get 期首日.
     *
     * @return the startDate value
     */
    public String startDate() {
        return this.startDate;
    }

    /**
     * Set 期首日.
     *
     * @param startDate the startDate value to set
     * @return the UpdateCompanyParamsFiscalYearsAttributes object itself.
     */
    public UpdateCompanyParamsFiscalYearsAttributes withStartDate(String startDate) {
        this.startDate = startDate;
        return this;
    }

    /**
     * Get 期末日（決算日）.
     *
     * @return the endDate value
     */
    public String endDate() {
        return this.endDate;
    }

    /**
     * Set 期末日（決算日）.
     *
     * @param endDate the endDate value to set
     * @return the UpdateCompanyParamsFiscalYearsAttributes object itself.
     */
    public UpdateCompanyParamsFiscalYearsAttributes withEndDate(String endDate) {
        this.endDate = endDate;
        return this;
    }

    /**
     * Get 期.
     *
     * @return the accountingPeriod value
     */
    public Integer accountingPeriod() {
        return this.accountingPeriod;
    }

    /**
     * Set 期.
     *
     * @param accountingPeriod the accountingPeriod value to set
     * @return the UpdateCompanyParamsFiscalYearsAttributes object itself.
     */
    public UpdateCompanyParamsFiscalYearsAttributes withAccountingPeriod(Integer accountingPeriod) {
        this.accountingPeriod = accountingPeriod;
        return this;
    }

    /**
     * Get 減価償却端数処理法(法人のみ)(0: 切り捨て、1: 切り上げ).
     *
     * @return the depreciationFraction value
     */
    public Integer depreciationFraction() {
        return this.depreciationFraction;
    }

    /**
     * Set 減価償却端数処理法(法人のみ)(0: 切り捨て、1: 切り上げ).
     *
     * @param depreciationFraction the depreciationFraction value to set
     * @return the UpdateCompanyParamsFiscalYearsAttributes object itself.
     */
    public UpdateCompanyParamsFiscalYearsAttributes withDepreciationFraction(Integer depreciationFraction) {
        this.depreciationFraction = depreciationFraction;
        return this;
    }

    /**
     * Get 不動産所得使用区分(個人事業主のみ)（0: 使用しない、3: 使用する）.
     *
     * @return the returnCode value
     */
    public Integer returnCode() {
        return this.returnCode;
    }

    /**
     * Set 不動産所得使用区分(個人事業主のみ)（0: 使用しない、3: 使用する）.
     *
     * @param returnCode the returnCode value to set
     * @return the UpdateCompanyParamsFiscalYearsAttributes object itself.
     */
    public UpdateCompanyParamsFiscalYearsAttributes withReturnCode(Integer returnCode) {
        this.returnCode = returnCode;
        return this;
    }

    /**
     * Get 消費税端数処理方法（0: 切り上げ、1: 切り捨て, 2: 四捨五入）.
     *
     * @return the taxFraction value
     */
    public Integer taxFraction() {
        return this.taxFraction;
    }

    /**
     * Set 消費税端数処理方法（0: 切り上げ、1: 切り捨て, 2: 四捨五入）.
     *
     * @param taxFraction the taxFraction value to set
     * @return the UpdateCompanyParamsFiscalYearsAttributes object itself.
     */
    public UpdateCompanyParamsFiscalYearsAttributes withTaxFraction(Integer taxFraction) {
        this.taxFraction = taxFraction;
        return this;
    }

}
